extends layout

block content
    script(src='/js/checkPlayerData.js' defer)
    script.
        let subject = !{JSON.stringify(subjectPlayer)};
        let dataPlayer;
        let infosPlayerData;
        let region = !{JSON.stringify(regionPlayer)};
        let isPregame = false;
        let preGameDataFull = null;

        async function updateSubjectPlayer() {
            try {
                const resultSubject = await fetch('/getSubjectPlayer');
                const newSubject = await resultSubject.json();
                subject = newSubject
            } catch (error) {
                console.error(error);
            }
        }

        async function getDataPreGame() {
            try {
                const resultData = await fetch('/pregame');
                const preGameData = await resultData.json();
                //- console.log(preGameData.infosData.AllyTeam.Players)
                if(preGameData.infosData != null) {
                    isPregame = true
                    console.log("pregame launch")
                    for(p of preGameData.infosData.AllyTeam.Players) {
                    if(p.Subject == subject) {
                        return p
                    }
                }
                } else {
                    console.log("pregame not launch")
                    isPregame = false
                }
                
            } catch(error) {
                console.log(error)
            }
        }

        setInterval(updateSubjectPlayer, 10000)

        async function updateDisplay() {
            await getDataPreGame()
            try {
                let resultDataPlayer = await searchPlayerbySubject(subject.subjectPlayer || subject, region)
                dataPlayer = resultDataPlayer.data

                let nametagPlayer = dataPlayer.name + "#" + dataPlayer.tag

                let resultInfosPlayer = await infosPlayer(nametagPlayer)
                infosPlayerData = resultInfosPlayer.data

                // Update Display

                let last_season = dataPlayer.by_season[Object.keys(dataPlayer.by_season)[Object.keys(dataPlayer.by_season).length - 1]]

                if(dataPlayer.current_data.elo != null) {
                    document.querySelector('.overlay-background').style.backgroundImage = `url(${infosPlayerData.card.wide})`
                    document.querySelector('.rank-user').src = dataPlayer.current_data.images.small
                    document.querySelector('.rank-user').alt = dataPlayer.current_data.currenttierpatched
                    document.querySelector('.rank-name span').textContent = dataPlayer.current_data.currenttierpatched
                    document.querySelector('.stats p:nth-of-type(1)').textContent = `${infosPlayerData.account_level} Lvl`
                    document.querySelector('.stats p:nth-of-type(2)').textContent = `${dataPlayer.current_data.elo} Elo`
                    document.querySelector('.stats p:nth-of-type(3)').textContent = `${last_season.wins} Wins`
                } else {
                    document.querySelector('.overlay-background').style.backgroundImage = ``
                    document.querySelector('.rank-user').src = "https://media.valorant-api.com/competitivetiers/03621f52-342b-cf4e-4f86-9350a49c6d04/0/smallicon.png"
                    document.querySelector('.rank-user').alt = "UNRANKED"
                    document.querySelector('.rank-name span').textContent = "UNRANKED"
                    document.querySelector('.stats p:nth-of-type(1)').textContent = `${infosPlayerData.account_level} Lvl`
                    document.querySelector('.stats p:nth-of-type(2)').textContent = `N/A Elo`
                    document.querySelector('.stats p:nth-of-type(3)').textContent = `N/A Wins`
                }

                if(isPregame) {
                    document.querySelector('.pregame_select').classList.add("slide-pregame-out")
                    document.querySelector('.pregame_select').classList.remove("slide-pregame-in")
                } else {
                    document.querySelector('.pregame_select').classList.add("slide-pregame-in")
                    document.querySelector('.pregame_select').classList.remove("slide-pregame-out")
                }
            } catch (error) {
                console.error(error)
            }
        }
        updateDisplay();
        getDataPreGame();
        setInterval(function() {
            getDataPreGame()
        },5000);
        setInterval(function() {
            updateDisplay();
        }, 10000)



    div(id="overlay" class="global-overlay slide-out")
        div(class="overlay-background")
        div(class="overlay")
            div(class="head-overlay")
                div(class="left-overlay")
                    img(class="rank-user")
                div(class="right-overlay")
                    div(class="rank-name")
                        span
                    hr
                    div(class="stats")
                        p
                        p
                        p
    div(class="pregame_select slide-pregame-out")
        div(class="pregame")
            div(class="top-title")
                p Select Agent
            div(class="top-pregame")
                img(class="agent-img" src="https://media.valorant-api.com/agents/add6443a-41bd-e414-f6ad-e58d267f4e95/displayicon.png")
                p(class="agent-name") Jett
